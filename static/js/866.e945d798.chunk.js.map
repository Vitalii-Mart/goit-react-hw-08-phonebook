{"version":3,"file":"static/js/866.e945d798.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid #1976d2;\n  padding: 15px;\n  display: inline-flex;\n  flex-direction: column;\n  width: 350px;\n  margin-top: 20px;\n  border-radius: 5px;\n`;\n","export const selectContacts = state => state.contactsReducer.items;\n\nexport const selectIsLoading = state => state.isLoading;\n\nexport const selectError = state => state.contactsReducer.error;\n\nexport const selectFilterValue = state => state.contactsReducer.filter;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const existingContact = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (!existingContact) {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          type=\"text\"\n          size=\"small\"\n          margin=\"normal\"\n          label=\"Name\"\n          value={name}\n          onChange={handleInputChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <TextField\n          type=\"tel\"\n          size=\"small\"\n          margin=\"normal\"\n          label=\"Number\"\n          value={number}\n          onChange={handleInputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\" margin=\"normal\">\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  handleInputChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 360px;\n  border: 1px solid #1976d2;\n  padding: 10px;\n  margin-top: 0;\n  border-radius: 8px;\n`;\nexport const Total = styled.h2`\n  font-size: 20px;\n  margin-bottom: 2px;\n  margin-top: 0;\n  font-weight: 600;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  margin-right: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from 'prop-types';\nimport { Item, Text } from './ContactItem.styled';\n\nconst ContactItem = ({ filteredContacts }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      {filteredContacts?.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Text>\n            {name}: {number}\n          </Text>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => dispatch(deleteContact(id))}\n            color=\"primary\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Item>\n      ))}\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  onClick: PropTypes.func,\n  filteredContacts: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { List, Total } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectFilterValue } from 'redux/contacts/selectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilterValue);\n  const filteredContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      <Total>Total contacts: {filteredContacts?.length}</Total>\n      <ContactItem filteredContacts={filteredContacts} />\n    </List>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  width: 360px;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: baseline;\n  flex-wrap: wrap;\n  border: 1px solid #1976d2;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  margin-top: 0px;\n  margin-right: 5px;\n`;\n\nexport const Text = styled.span`\n  font-size: 20px;\n  margin-bottom: 2px;\n  margin-top: 0;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { Box, Label, Text } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <Box>\n      <Label htmlFor=\"find\">\n        <Text>Find contacts by name</Text>\n      </Label>\n      <TextField\n        fullWidth\n        label=\"search\"\n        size=\"small\"\n        margin=\"dense\"\n        type=\"text\"\n        onChange={e => dispatch(filterContact(e.target.value.toLowerCase()))}\n      />\n    </Box>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n","import { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList/';\nimport Filter from 'components/Filter';\n\nexport default function Contacts() {\n  const Wrapper = styled.section`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 40px;\n  `;\n\n  return (\n    <div>\n      <Helmet title=\"Contacts\" />\n      <Wrapper>\n        <h1>Manage your contacts list</h1>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </div>\n  );\n}\n"],"names":["Form","styled","selectContacts","state","contactsReducer","items","selectFilterValue","filter","ContactForm","dispatch","useDispatch","contacts","useSelector","useState","name","setName","number","setNumber","handleInputChange","evt","target","value","onSubmit","preventDefault","find","el","toLowerCase","alert","addContact","TextField","type","size","margin","label","onChange","pattern","title","required","Button","variant","List","Total","Item","Text","filteredContacts","map","id","IconButton","onClick","deleteContact","color","Delete","ContactList","includes","useEffect","fetchContacts","length","Box","Label","Filter","htmlFor","fullWidth","e","filterContact","Contacts","Wrapper","Helmet"],"sourceRoot":""}